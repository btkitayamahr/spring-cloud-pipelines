node {
	stage('git pull') {
		deleteDir()
		sh 'git config --global http.sslVerify false'
		checkout([
			$class: 'GitSCM',
			branches: [[name: '*/${APP_BRANCH}']],
			doGenerateSubmoduleConfigurations: false,
			extensions: [],
			submoduleCfg: [],
			userRemoteConfigs: [
				[
					credentialsId: 'git-gitbucket',
					url: '${APP_REPOSITORY}'
				]
			]
		])
	}
	stage('build') {
		dir("${WORKSPACE}/gateway") {
			withMaven( maven: "Maven") {
				sh 'mvn clean install'
			}
		}
	}
	stage('deploy') {
		sshPublisher(
			publishers: [
				sshPublisherDesc(
					configName: 'docker-sample',
					transfers: [
						sshTransfer(
							excludes: '',
							execCommand: 'sudo docker stop gateway',
							execTimeout: 120000,
							flatten: false,
							makeEmptyDirs: false,
							noDefaultExcludes: false,
							patternSeparator: '[, ]+',
							remoteDirectory: '',
							remoteDirectorySDF: false,
							removePrefix: '',
							sourceFiles: ''
						)
					],
					usePromotionTimestamp: false,
					useWorkspaceInPromotion: false,
					verbose: false
				)
			]
		)
		sshPublisher(
			publishers: [
				sshPublisherDesc(
					configName: 'docker-sample',
					transfers: [
						sshTransfer(
							excludes: '',
							execCommand: 'sudo docker rm gateway',
							execTimeout: 120000,
							flatten: false,
							makeEmptyDirs: false,
							noDefaultExcludes: false,
							patternSeparator: '[, ]+',
							remoteDirectory: '',
							remoteDirectorySDF: false,
							removePrefix: '',
							sourceFiles: ''
						)
					],
					usePromotionTimestamp: false,
					useWorkspaceInPromotion: false,
					verbose: false
				)
			]
		)
		sshPublisher(
			publishers: [
				sshPublisherDesc(
					configName: 'docker-sample',
					transfers: [
						sshTransfer(
							excludes: '',
							execCommand: 'sudo docker rmi 52.194.221.169:5000/app/gateway',
							execTimeout: 120000,
							flatten: false,
							makeEmptyDirs: false,
							noDefaultExcludes: false,
							patternSeparator: '[, ]+',
							remoteDirectory: '',
							remoteDirectorySDF: false,
							removePrefix: '',
							sourceFiles: ''
						)
					],
					usePromotionTimestamp: false,
					useWorkspaceInPromotion: false,
					verbose: false
				)
			]
		)
		sshPublisher(
			publishers: [
				sshPublisherDesc(
					configName: 'docker-sample',
					transfers: [
						sshTransfer(
							excludes: '',
							execCommand: 'sudo docker run -d --name gateway -p 9010:9010 -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://54.238.143.77:9000/eureka/ --net=msa_blank 52.194.221.169:5000/app/gateway',
							execTimeout: 120000,
							flatten: false,
							makeEmptyDirs: false,
							noDefaultExcludes: false,
							patternSeparator: '[, ]+',
							remoteDirectory: '',
							remoteDirectorySDF: false,
							removePrefix: '',
							sourceFiles: ''
						)
					],
					usePromotionTimestamp: false,
					useWorkspaceInPromotion: false,
					verbose: false
				)
			]
		)
	}
}